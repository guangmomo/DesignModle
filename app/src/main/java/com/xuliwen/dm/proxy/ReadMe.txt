代理模式的优点：
1. 将委托类和客户端解耦，当业务发生变化的时候，只需要修改代理类，避免修改委托类
2.
例子：
委托类产生220v电压，客户端需要20v电压，那么代理类负责将220v转换为20v
委托类产生220v电压，另一个客户端需要30v电压，那么代理类负责将220v转换为30v
这些业务的变化都只需要修改代理类，不用去修改委托类



动态代理的步骤：
1. 新建代理接口Subject，新建委托类RealSubject来实现代理接口
2. 新建MyInvocationHandler，实现InvocationHandler
3. 使用Proxy.newProxyInstance动态生成代理对象
http://www.cnblogs.com/xiaoluo501395377/p/3383130.html
http://layznet.iteye.com/blog/1182924

动态代理和静态代理的区别：
1. 静态：在编译期就确定了代理类的字节码
   动态：要在运行时通过反射去确定代理类

2. 静态： 代理类实现代理接口，所以代理接口有多少个方法，代理类就要实现多少个
   动态： 调用代理接口的方法最终都在InvocationHandler的invoke中执行

3. 静态： 代理类只能代理一种代理接口（虽然可以继承多个接口，但是这会使得代理类过于复杂）；要代理接口比较
          合适的方法是为每个接口创建一个代理类，但如果代理接口很多的话，这会使代理类的数量剧增
   动态： 一个代理类可以代理多个代理接口，在invoke中，通过targetObject判断委托类的类型，通过method判断方法名

静态代理模式和装饰模式的区别：
静态：委托者在代理类中直接构造，关注于控制对对象的访问
装饰：被装饰者是作为装饰类构造方法的参数传进去的，关注于在一个对象上动态的添加方法

代理模式，装饰模式和适配器模式，桥接模式的区别：
代理模式，装饰模式需要实现一个共同的接口，而适配器模式，桥接模式不需要